{"id":"../../node_modules/node-lzw/lib/lzw.js","dependencies":[{"name":"D:\\paul\\College related\\college\\2nd year\\SEM3\\MinProject\\Code\\Basic-model\\Temp\\package.json","includedInParent":true,"mtime":1635430959864},{"name":"D:\\paul\\College related\\college\\2nd year\\SEM3\\MinProject\\Code\\node_modules\\node-lzw\\package.json","includedInParent":true,"mtime":1635440145099}],"generated":{"js":"\"use strict\";\n\nvar LZW = function() { };\n\nLZW.prototype.encode = function(s) {\n    var dict = {};\n    var data = (s + \"\").split(\"\");\n    var out = [];\n    var currChar;\n    var phrase = data[0];\n    var code = 256;\n    for (var i = 1; i < data.length; i++) {\n        currChar = data[i];\n        if (dict[phrase + currChar] != null) {\n            phrase += currChar;\n        }\n        else {\n            out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));\n            dict[phrase + currChar] = code;\n            code++;\n            phrase=currChar;\n        }\n    }\n    out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));\n    for (var i = 0; i < out.length; i++) {\n        out[i] = String.fromCharCode(out[i]);\n    }\n    return out.join(\"\");\n};\n\nLZW.prototype.decode = function(s) {\n\tvar dict = {};\n\tvar data = (s + \"\").split(\"\");\n\tvar currChar = data[0];\n\tvar oldPhrase = currChar;\n\tvar out = [currChar];\n\tvar code = 256;\n\tvar phrase;\n\tfor (var i = 1; i < data.length; i++) {\n\t\tvar currCode = data[i].charCodeAt(0);\n\t\tif (currCode < 256) {\n\t\t\tphrase = data[i];\n\t\t}\n\t\telse {\n\t\t   phrase = dict[currCode] ? dict[currCode] : (oldPhrase + currChar);\n\t\t}\n\t\tout.push(phrase);\n\t\tcurrChar = phrase.charAt(0);\n\t\tdict[code] = oldPhrase + currChar;\n\t\tcode++;\n\t\toldPhrase = phrase;\n\t}\n\treturn out.join(\"\");\n};\n\nmodule.exports = new LZW();\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/node-lzw/lib/lzw.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"../../node_modules/node-lzw/lib/lzw.js":"\"use strict\";\n\nvar LZW = function() { };\n\nLZW.prototype.encode = function(s) {\n    var dict = {};\n    var data = (s + \"\").split(\"\");\n    var out = [];\n    var currChar;\n    var phrase = data[0];\n    var code = 256;\n    for (var i = 1; i < data.length; i++) {\n        currChar = data[i];\n        if (dict[phrase + currChar] != null) {\n            phrase += currChar;\n        }\n        else {\n            out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));\n            dict[phrase + currChar] = code;\n            code++;\n            phrase=currChar;\n        }\n    }\n    out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0));\n    for (var i = 0; i < out.length; i++) {\n        out[i] = String.fromCharCode(out[i]);\n    }\n    return out.join(\"\");\n};\n\nLZW.prototype.decode = function(s) {\n\tvar dict = {};\n\tvar data = (s + \"\").split(\"\");\n\tvar currChar = data[0];\n\tvar oldPhrase = currChar;\n\tvar out = [currChar];\n\tvar code = 256;\n\tvar phrase;\n\tfor (var i = 1; i < data.length; i++) {\n\t\tvar currCode = data[i].charCodeAt(0);\n\t\tif (currCode < 256) {\n\t\t\tphrase = data[i];\n\t\t}\n\t\telse {\n\t\t   phrase = dict[currCode] ? dict[currCode] : (oldPhrase + currChar);\n\t\t}\n\t\tout.push(phrase);\n\t\tcurrChar = phrase.charAt(0);\n\t\tdict[code] = oldPhrase + currChar;\n\t\tcode++;\n\t\toldPhrase = phrase;\n\t}\n\treturn out.join(\"\");\n};\n\nmodule.exports = new LZW();\n"},"lineCount":57}},"error":null,"hash":"590d1ed26bad5a0f0ad55bf2a14b319c","cacheData":{"env":{}}}